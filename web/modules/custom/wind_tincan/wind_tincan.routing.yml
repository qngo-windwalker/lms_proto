wind_tincan.render:
  path: course
  defaults:
    _controller: \Drupal\wind_tincan\Controller\WindTincanController::courseRender
    _title: 'Course'
  requirements:
    _role: 'authenticated'
wind_tincan.course:
  path: course/{id}
  defaults:
    _controller: \Drupal\wind_tincan\Controller\WindTincanController::getContent
    _title: 'Course'
  requirements:
    _role: 'authenticated'
wind_tincan.tcapi:
  path: course/tcapi
  defaults:
    _controller: \Drupal\wind_tincan\Controller\WindTincanAPIController::getContent
  requirements:
    _role: 'authenticated'
wind_tincan.tcapi.put_statements:
  path: course/tcapi/statements
  defaults:
    _controller: \Drupal\wind_tincan\Controller\WindTincanAPIStatementController::putStatements
  requirements:
    _role: 'authenticated'
  methods: [PUT]
wind_tincan.tcapi.get_statements:
  path: course/tcapi/statements
  defaults:
    _controller: \Drupal\wind_tincan\Controller\WindTincanAPIStatementController::getStatements
  requirements:
    _permission: 'access content'
wind_tincan.tcapi.activities.put_state:
  path: course/tcapi/activities/state
  defaults:
    _controller: \Drupal\wind_tincan\Controller\WindTincanAPIActivitiesStateController::putActivitiesState
  requirements:
    _role: 'authenticated'
  methods: [PUT]
wind_tincan.tcapi.activities.get_state:
  path: course/tcapi/activities/state
  defaults:
    _controller: \Drupal\wind_tincan\Controller\WindTincanAPIActivitiesStateController::getActivitiesState
  requirements:
    _role: 'authenticated'
#wind_tincan.certificate.id:
#  path: certificate/{statement_id}
#  defaults:
#    _controller: \Drupal\wind_tincan\Controller\WindTincanCertificateIdController::getContent
#    _title: 'Certificate'
#  requirements:
#    _permission: 'access content'
#################################################
## Admin
#################################################
wind_tincan.admin.tincan:
  path: '/admin/tincan'
  defaults:
    _controller: '\Drupal\wind_tincan\Controller\WindTincanAdminTincanUserCourseController::getContent'
    _title: 'Tincan'
  requirements:
    _permission: 'administer users'
wind_tincan.admin.tincan.user.course:
  path: '/admin/tincan/{uid}/course/{tincan_id}'
  defaults:
    _controller: '\Drupal\wind_tincan\Controller\WindTincanAdminTincanUserCourseController::getUserCourseContent'
    _title_callback: '\Drupal\wind_tincan\Controller\WindTincanAdminTincanUserCourseController::getUserCourseTitle'
  requirements:
    _permission: 'administer users'

# Use this
wind_tincan.admin.tincan.user.uid.node.nid:
  path: '/admin/tincan/user/{user}/node/{node}'
  defaults:
    _controller: '\Drupal\wind_tincan\Controller\WindTincanAdminTincanController::getUserNodeContent'
  requirements:
    _permission: 'administer users'
  options:
    parameters:
      user:
        type: entity:user
      node:
        type: entity:node
wind_tincan.admin.tincan.user.uid.file.fid:
  path: '/admin/tincan/user/{user}/file/{file}'
  defaults:
    _controller: '\Drupal\wind_tincan\Controller\WindTincanAdminTincanController::getUserFileContent'
  requirements:
    _permission: 'administer users'
  options:
    parameters:
      user:
        type: entity:user
      file:
        type: entity:file
wind_tincan.admin.tincan.user.uid.file.fid.delete_all_statements:
  path: '/admin/tincan/user/{user}/file/{file}/delete-all-statements'
  defaults:
    _form: \Drupal\wind_tincan\Form\WindTincanUserFileDeleteAllStatements
  requirements:
    _permission: 'administer users'
  options:
    parameters:
      user:
        type: entity:user
      node:
        type: entity:file
wind_tincan.admin.tincan.statement.id:
  path: '/admin/tincan/statement/{id}'
  defaults:
    _controller: '\Drupal\wind_tincan\Controller\WindTincanAdminTincanController::getStatement'
    _title: 'Tincan'
  requirements:
    _permission: 'administer users'
#  options:
#    parameters:
#      statementid:
#        type: entity:tincan_statement
wind_tincan.admin.tincan.statement.id.delete:
  path: '/admin/tincan/statement/{id}/delete'
  defaults:
    _form: \Drupal\wind_tincan\Form\WindTincanStatementDelete
  requirements:
    _permission: 'administer users'
wind_tincan.tincan.state.tincan_state.delete:
  path: '/tincan/state/{tincan_state}/delete'
  defaults:
    _form: \Drupal\wind_tincan\Form\WindTincanStateDeleteConfirm
  requirements:
    _permission: 'administer users'
  options:
    parameters:
      tincan_state:
        type: entity:tincan_state
    _custom_theme: 'claro'
